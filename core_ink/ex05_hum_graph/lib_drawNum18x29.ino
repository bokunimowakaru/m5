// 引用元：
// https://github.com/m5stack/M5Core-Ink/blob/master/examples/Basics/FactoryTest/Num18x29.cpp
// https://github.com/m5stack/M5Core-Ink/blob/master/examples/Basics/FactoryTest/icon.h
// https://github.com/m5stack/M5Core-Ink/blob/master/examples/Basics/FactoryTest/Num18x29.cpp


unsigned char image_num_29_01[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf8, 0x0f, 0xf8, 0x00, 0xfe, 0x3e, 0x3e, 0x0f, 0x83, 0x8f, 0xf8, 0xe3, 0xf8, 0x38, 0xfe, 0x0e, 0x3e, 0x03, 0x8f, 0x88, 0xe3, 0x82, 0x38, 
0xe3, 0x8e, 0x20, 0xe3, 0x88, 0xf8, 0xe0, 0x3e, 0x38, 0x3f, 0x8e, 0x0f, 0xe3, 0x8f, 0xf8, 0xe0, 0xf8, 0x3e, 0x3e, 0x3f, 0x80, 0x0f, 0xf8, 0x0f, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_02[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xf0, 0x1f, 0xfc, 0x07, 0xff, 0xf1, 0xff, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xc7, 0xff, 0xf1, 0xff, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xc7, 0xff, 
0xf1, 0xff, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xc7, 0xff, 0xf1, 0xff, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xc7, 0xff, 0xf1, 0xff, 0xfc, 0x7f, 0xff, 0x1f, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_03[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf8, 0x0f, 0xf8, 0x00, 0xfe, 0x3e, 0x3e, 0x0f, 0x83, 0x8f, 0xf8, 0xe3, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 0x83, 0xff, 0xe3, 0xff, 0xe0, 0xff, 
0xf8, 0xff, 0xf8, 0x3f, 0xfe, 0x3f, 0xfe, 0x0f, 0xff, 0x8f, 0xff, 0x83, 0xff, 0xe3, 0xff, 0xe0, 0xff, 0xf8, 0xff, 0xfe, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_04[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf8, 0x0f, 0xf8, 0x00, 0xfe, 0x3e, 0x3e, 0x0f, 0x83, 0x8f, 0xf8, 0xe3, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 0x83, 0xff, 0xe3, 0xfe, 0x00, 0xff, 
0x80, 0xff, 0xe0, 0x0f, 0xff, 0xe3, 0xff, 0xf8, 0x3f, 0xff, 0x8e, 0x3f, 0xe3, 0x8f, 0xf8, 0xe0, 0xf8, 0x3e, 0x3e, 0x3f, 0x80, 0x0f, 0xf8, 0x0f, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_05[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0x0f, 0xff, 0xc3, 0xff, 0xe0, 0xff, 0xf0, 0x3f, 0xfc, 0x0f, 0xfe, 0x03, 0xff, 0x88, 0xff, 0xc6, 0x3f, 0xe1, 0x8f, 0xf8, 0xe3, 0xfc, 
0x38, 0xff, 0x1e, 0x3f, 0x87, 0x8f, 0xe0, 0x00, 0x38, 0x00, 0x0e, 0x00, 0x03, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_06[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 0x38, 0xff, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xfe, 0x00, 0x3f, 0x80, 0x0f, 0xe0, 0x00, 0xff, 
0xfe, 0x3f, 0xff, 0x83, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xff, 0x8e, 0x3f, 0xe3, 0x8f, 0xf8, 0xe0, 0xf8, 0x3e, 0x3e, 0x3f, 0x80, 0x0f, 0xf8, 0x0f, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_07[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf8, 0x0f, 0xf8, 0x00, 0xfe, 0x3e, 0x3e, 0x0f, 0x83, 0x8f, 0xf8, 0xe3, 0xfe, 0x38, 0xff, 0xfe, 0x20, 0x3f, 0x88, 0x0f, 0xe0, 0x00, 0xf8, 
0x3e, 0x3e, 0x0f, 0x83, 0x8f, 0xf8, 0xe3, 0xfe, 0x38, 0xff, 0x8e, 0x3f, 0xe3, 0x8f, 0xf8, 0xe0, 0xf8, 0x3e, 0x3e, 0x3f, 0x80, 0x0f, 0xf8, 0x0f, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_08[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 0x3f, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xf8, 0x3f, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xe0, 0xff, 
0xf8, 0xff, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 0x83, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xfe, 0x0f, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_09[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf8, 0x0f, 0xf8, 0x00, 0xfe, 0x3e, 0x3e, 0x0f, 0x83, 0x8f, 0xf8, 0xe3, 0xfe, 0x38, 0xff, 0x8e, 0x0f, 0x83, 0xe3, 0xe3, 0xf8, 0x00, 0xff, 
0x80, 0xff, 0x80, 0x0f, 0xe3, 0xe3, 0xe0, 0xf8, 0x38, 0xff, 0x8e, 0x3f, 0xe3, 0x8f, 0xf8, 0xe0, 0xf8, 0x3e, 0x3e, 0x3f, 0x80, 0x0f, 0xf8, 0x0f, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_10[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf8, 0x0f, 0xf8, 0x00, 0xfe, 0x3e, 0x3e, 0x0f, 0x83, 0x8f, 0xf8, 0xe3, 0xfe, 0x38, 0xff, 0x8e, 0x3f, 0xe3, 0x8f, 0xf8, 0xe0, 0xf8, 0x3e, 
0x3e, 0x0f, 0x80, 0x03, 0xf8, 0x08, 0xfe, 0x02, 0x3f, 0xff, 0x8e, 0x3f, 0xe3, 0x8f, 0xf8, 0xe0, 0xf8, 0x3e, 0x3e, 0x3f, 0x80, 0x0f, 0xf8, 0x0f, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};
unsigned char image_num_29_11[66] = { 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xfe, 0x0f, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xf8, 0x3f, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 
0xe3, 0xff, 0xe0, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xff, 0x8f, 0xff, 0x83, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xfe, 0x0f, 0xff, 0x8f, 0xff, 0xe3, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xc0, 
};

/////////////////////////////////////////////////////////

typedef struct {
    unsigned char *ptr;
}image_t;

image_t num18x29[11] = {
    {image_num_29_01},
    {image_num_29_02},
    {image_num_29_03},
    {image_num_29_04},
    {image_num_29_05},
    {image_num_29_06},
    {image_num_29_07},
    {image_num_29_08},
    {image_num_29_09},
    {image_num_29_10},
    {image_num_29_11},
};

void drawNum(Ink_Sprite *sprite, int y, String S) {
    char s[12];
    S.toCharArray(s, 12);
    s[11]='\0';
    int x = 0;
    for(int i=0; i<strlen(s); i++){
        if(s[i] >= '0' && s[i] <= '9'){
            x += 18;
        }else if(s[i] == '/'){
            x += 18;
        }else{
            x += 8;
        }
    }
    x = 100 - x / 2;
    for(int i=0; i<strlen(s); i++){
        if(s[i] >= '0' && s[i] <= '9'){
            int n = s[i] - '0';
            sprite->drawBuff(x, y, 18, 29, num18x29[n].ptr);
            x += 18;
        }else if(s[i] == '/'){
            sprite->drawChar(x,y+13,s[10]);
            x += 18;
        }else{
            sprite->drawChar(x,y+13,s[i]);
            x += 9;
        }
        if(x > 182 ) x = 182;
    }
}
